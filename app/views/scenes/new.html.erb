<%= render 'shared/show_resource_breadcrumbs', resource: 'Scene' %>
<h2><%= octicon 'eye', height: 24 %> New <code><%= @current_tenant.subdomain %></code> Scene</h2>
<p>
  Scenes are public groups.
</p>
<%= form_with(url: '/scenes') do |form| %>
  <h3>Scene Name</h3>
  <p>
    <%= form.text_field :name, placeholder: 'Scene Name' %>
  </p>

  <h3>Scene Handle</h3>
  <p style="margin-bottom:0;">
    The scene handle determines the scene's URL path: <code><%= request.protocol %><%= request.host %>/scenes/<strong id="handle-example">handle</strong></code>
    <br/>
    Only lowercase letters, numbers, and hyphens are allowed.
  </p>
  <p>
    <span id="already-taken-message" style="display:block;opacity:0;height:1.6em;font-size:0.8em;color:red;">That handle is already taken.</span>
    <%= form.text_field :handle, placeholder: 'handle', id: 'handle-input' %>
  </p>
  <script>
    const handleInput = document.getElementById('handle-input');
    const handleExample = document.getElementById('handle-example');
    const alreadyTakenMessage = document.getElementById('already-taken-message');
    const validateHandle = function(handle) {
      return /^[a-z0-9-]+$/.test(handle);
    };
    const checkIfAvailable = function(handle) {
      return fetch('/scenes/available?handle=' + handle)
        .then(response => response.json())
        .then(data => {
          if (data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'none';
            alreadyTakenMessage.style.opacity = 0;
            handleInput.style.backgroundColor = 'inherit';
          } else if (!data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'line-through';
            alreadyTakenMessage.style.opacity = 1;
            handleInput.style.backgroundColor = 'rgba(255,0,0,0.3)';
          } else {
            // noop
          }
        });
    };
    handleInput.addEventListener('input', function() {
      const handle = handleInput.value;
      if (validateHandle(handle)) {
        checkIfAvailable(handle)
      } else {
        handleInput.value = handle.replace(/[^a-z0-9-]/g, '');
      }
    });
  </script>

  <h3>Who can join?</h3>

  <p>
    Scenes are always publicly visible, but only individuals who have joined can post notes.
  </p>
  <p>

  </p>
  <p>
    <fieldset>
      <label>
        <%= form.radio_button :invitation_mode, 'open', checked: true %>
        Open to anyone. No invite required.
      </label>
      <br/>
      <label>
        <%= form.radio_button :invitation_mode, 'invite_only', checked: false %>
        Invite from existing scene member is required to join.
      </label>
    </fieldset>
  </p>

  <hr style="height:1px;" />
  <%= form.submit 'Start Scene' %>
<% end %>
